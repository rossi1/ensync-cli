<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE topic SYSTEM "https://resources.jetbrains.com/writerside/1.0/xhtml-entities.dtd">
<topic xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xsi:noNamespaceSchemaLocation="https://resources.jetbrains.com/writerside/1.0/topic.v2.xsd"
       id="ensync-cli" title="EnSync CLI Tool">

    <p>A command-line interface for interacting with the EnSync config management service.</p>

    <chapter title="Installation" id="installation">
        <p>You can install the EnSync CLI Tool in two ways:</p>

        <procedure title="From Source" id="install-source">
            <step>Clone the repository:
                <code-block lang="bash">
                    git clone https://github.com/rossi1/ensync-cli
                    cd ensync-cli
                </code-block>
            </step>
            <step>Build the binary:
                <code-block lang="bash">
                    make build
                </code-block>
            </step>
            <step>The binary will be available in <code>bin/ensync</code></step>
        </procedure>

        <procedure title="Using Go Install" id="install-go">
            <step>
                <p>Install the latest version:</p>
                <code-block lang="bash">
                    go install github.com/rossi1/ensync-cli@latest
                </code-block>
            </step>
            <step>
                <p>Or install a specific version:</p>
                <code-block lang="bash">
                    go install github.com/ensync-cli/cmd/ensync@v1.0.0
                </code-block>
            </step>
        </procedure>

        <note>
            <p><b>Requirements:</b></p>
            <list>
                <li>Go version 1.17 or later</li>
                <li><code>$GOPATH/bin</code> or <code>$GOBIN</code> must be in your system's PATH</li>
            </list>
        </note>
    </chapter>

    <chapter title="Configuration" id="configuration">
        <p>Configure the CLI using either a configuration file or environment variables.</p>

        <chapter title="Configuration File" id="config-file">
            <p>Create a config file at <code>~/.ensync/config.yaml</code>:</p>
            <code-block lang="yaml">
                base_url: "http://localhost:8080/api/v1/ensync"
                api_key: "your-api-key"
                debug: false
            </code-block>
        </chapter>

        <chapter title="Environment Variables" id="env-vars">
            <code-block lang="bash">
                export ENSYNC_API_KEY="your-api-key"
                export ENSYNC_BASE_URL="http://localhost:8080/api/v1/ensync"
            </code-block>
        </chapter>
    </chapter>

    <chapter title="Usage" id="usage">
        <chapter title="Event Management" id="events">
            <deflist type="medium">
                <def title="List Events">
                    <p>List events with pagination and sorting:</p>
                    <code-block lang="bash">
                        # List events with pagination
                        ensync event list --page 0 --limit 10 --order DESC --order-by createdAt

                        # List events with different ordering
                        ensync event list --order ASC --order-by name
                    </code-block>
                </def>
                
                <def title="Create Event">
                    <code-block lang="bash">
                        ensync event create --name "test-event" --payload '{"key":"value","another":"data"}'
                    </code-block>
                </def>

                <def title="Update Event">
                    <code-block lang="bash">
                        # Update event name
                        ensync event update --id 123 --name "updated-name"

                        # Update event payload
                        ensync event update --id 123 --payload '{"key":"new-value"}'
                    </code-block>
                </def>
            </deflist>
        </chapter>

        <chapter title="Access Key Management" id="access-keys">
            <deflist type="medium">
                <def title="List Access Keys">
                    <code-block lang="bash">
                        ensync access-key list
                    </code-block>
                </def>

                <def title="Create Access Key">
                    <code-block lang="bash">
                        ensync access-key create  --permissions '{"send": ["event1"], "receive": ["event2"]}'
                    </code-block>
                </def>

                <def title="Manage Permissions">
                    <code-block lang="bash">
                        # Get current permissions
                        ensync access-key permissions get --key "MyAccessKey"

                        # Update permissions
                        ensync access-key permissions set --key "MyAccessKey" --permissions '{"send": ["event1"], "receive": ["event2"]}'
                    </code-block>
                </def>
            </deflist>
        </chapter>

        <chapter title="General Options" id="options">
            <deflist type="medium">
                <def title="Debug Mode">
                    <code-block lang="bash">
                        ensync --debug event list
                    </code-block>
                </def>

                <def title="Version Information">
                    <code-block lang="bash">
                        # Display version
                        ensync version

                        # Get version in JSON format
                        ensync version --json
                    </code-block>
                </def>
            </deflist>
        </chapter>
    </chapter>

    <chapter title="Common Flags" id="flags">
        <table>
            <tr>
                <td>Flag</td>
                <td>Description</td>
                <td>Default</td>
            </tr>
            <tr>
                <td><code>--page</code></td>
                <td>Page number for pagination</td>
                <td>0</td>
            </tr>
            <tr>
                <td><code>--limit</code></td>
                <td>Number of items per page</td>
                <td>10</td>
            </tr>
            <tr>
                <td><code>--order</code></td>
                <td>Sort order (ASC/DESC)</td>
                <td>ASC</td>
            </tr>
            <tr>
                <td><code>--order-by</code></td>
                <td>Field to sort by</td>
                <td>name</td>
            </tr>
            <tr>
                <td><code>--debug</code></td>
                <td>Enable debug mode</td>
                <td>false</td>
            </tr>
            <tr>
                <td><code>--config</code></td>
                <td>Custom config file location</td>
                <td>~/.ensync/config.yaml</td>
            </tr>
        </table>
    </chapter>

    <chapter title="Error Handling" id="errors">
        <p>The CLI provides clear error messages and proper exit codes:</p>
        <table>
            <tr>
                <td>Exit Code</td>
                <td>Description</td>
            </tr>
            <tr>
                <td>0</td>
                <td>Success</td>
            </tr>
            <tr>
                <td>1</td>
                <td>General error</td>
            </tr>
            <tr>
                <td>2</td>
                <td>Configuration error</td>
            </tr>
            <tr>
                <td>3</td>
                <td>API error</td>
            </tr>
        </table>
    </chapter>

    <chapter title="Development" id="development">
        <deflist type="medium">
            <def title="Build">
                <code-block lang="bash">
                    make build
                </code-block>
            </def>

            <def title="Run Tests">
                <code-block lang="bash">
                    # Run unit tests
                    make test

                    # Run integration tests
                    make test-integration
                </code-block>
            </def>

            <def title="Lint">
                <code-block lang="bash">
                    make lint
                </code-block>
            </def>

            <def title="Release">
                <code-block lang="bash">
                    make release
                </code-block>
            </def>
        </deflist>
    </chapter>

    <chapter title="License" id="license">
        <p>This project is licensed under the MIT License - see the LICENSE file for details.</p>
    </chapter>

</topic>